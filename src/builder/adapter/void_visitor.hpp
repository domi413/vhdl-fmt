#ifndef BUILDER_ADAPTER_VOID_VISITOR_HPP
#define BUILDER_ADAPTER_VOID_VISITOR_HPP

#include "vhdlParser.h"

namespace builder::adapter {
class VoidVisitor
{
  public:
    VoidVisitor() = default;
    virtual ~VoidVisitor() = default;
    VoidVisitor(const VoidVisitor &) = default;
    auto operator=(const VoidVisitor &) -> VoidVisitor & = default;
    VoidVisitor(VoidVisitor &&) = default;
    auto operator=(VoidVisitor &&) -> VoidVisitor & = default;

    virtual void visitAbstractLiteral(vhdlParser::Abstract_literalContext *context) = 0;
    virtual void visitAccessTypeDefinition(vhdlParser::Access_type_definitionContext *context) = 0;
    virtual void visitAcrossAspect(vhdlParser::Across_aspectContext *context) = 0;
    virtual void visitActualDesignator(vhdlParser::Actual_designatorContext *context) = 0;
    virtual void visitActualParameterPart(vhdlParser::Actual_parameter_partContext *context) = 0;
    virtual void visitActualPart(vhdlParser::Actual_partContext *context) = 0;
    virtual void visitAddingOperator(vhdlParser::Adding_operatorContext *context) = 0;
    virtual void visitAggregate(vhdlParser::AggregateContext *context) = 0;
    virtual void visitAliasDeclaration(vhdlParser::Alias_declarationContext *context) = 0;
    virtual void visitAliasDesignator(vhdlParser::Alias_designatorContext *context) = 0;
    virtual void visitAliasIndication(vhdlParser::Alias_indicationContext *context) = 0;
    virtual void visitAllocator(vhdlParser::AllocatorContext *context) = 0;
    virtual void visitArchitectureBody(vhdlParser::Architecture_bodyContext *context) = 0;
    virtual void visitArchitectureDeclarativePart(vhdlParser::Architecture_declarative_partContext *context) = 0;
    virtual void visitArchitectureStatement(vhdlParser::Architecture_statementContext *context) = 0;
    virtual void visitArchitectureStatementPart(vhdlParser::Architecture_statement_partContext *context) = 0;
    virtual void visitArrayNatureDefinition(vhdlParser::Array_nature_definitionContext *context) = 0;
    virtual void visitArrayTypeDefinition(vhdlParser::Array_type_definitionContext *context) = 0;
    virtual void visitAssertion(vhdlParser::AssertionContext *context) = 0;
    virtual void visitAssertionStatement(vhdlParser::Assertion_statementContext *context) = 0;
    virtual void visitAssociationElement(vhdlParser::Association_elementContext *context) = 0;
    virtual void visitAssociationList(vhdlParser::Association_listContext *context) = 0;
    virtual void visitAttributeDeclaration(vhdlParser::Attribute_declarationContext *context) = 0;
    virtual void visitAttributeDesignator(vhdlParser::Attribute_designatorContext *context) = 0;
    virtual void visitAttributeSpecification(vhdlParser::Attribute_specificationContext *context) = 0;
    virtual void visitBaseUnitDeclaration(vhdlParser::Base_unit_declarationContext *context) = 0;
    virtual void visitBindingIndication(vhdlParser::Binding_indicationContext *context) = 0;
    virtual void visitBlockConfiguration(vhdlParser::Block_configurationContext *context) = 0;
    virtual void visitBlockDeclarativeItem(vhdlParser::Block_declarative_itemContext *context) = 0;
    virtual void visitBlockDeclarativePart(vhdlParser::Block_declarative_partContext *context) = 0;
    virtual void visitBlockHeader(vhdlParser::Block_headerContext *context) = 0;
    virtual void visitBlockSpecification(vhdlParser::Block_specificationContext *context) = 0;
    virtual void visitBlockStatement(vhdlParser::Block_statementContext *context) = 0;
    virtual void visitBlockStatementPart(vhdlParser::Block_statement_partContext *context) = 0;
    virtual void visitBranchQuantityDeclaration(vhdlParser::Branch_quantity_declarationContext *context) = 0;
    virtual void visitBreakElement(vhdlParser::Break_elementContext *context) = 0;
    virtual void visitBreakList(vhdlParser::Break_listContext *context) = 0;
    virtual void visitBreakSelectorClause(vhdlParser::Break_selector_clauseContext *context) = 0;
    virtual void visitBreakStatement(vhdlParser::Break_statementContext *context) = 0;
    virtual void visitCaseStatement(vhdlParser::Case_statementContext *context) = 0;
    virtual void visitCaseStatementAlternative(vhdlParser::Case_statement_alternativeContext *context) = 0;
    virtual void visitChoice(vhdlParser::ChoiceContext *context) = 0;
    virtual void visitChoices(vhdlParser::ChoicesContext *context) = 0;
    virtual void visitComponentConfiguration(vhdlParser::Component_configurationContext *context) = 0;
    virtual void visitComponentDeclaration(vhdlParser::Component_declarationContext *context) = 0;
    virtual void visitComponentInstantiationStatement(vhdlParser::Component_instantiation_statementContext *context) = 0;
    virtual void visitComponentSpecification(vhdlParser::Component_specificationContext *context) = 0;
    virtual void visitCompositeNatureDefinition(vhdlParser::Composite_nature_definitionContext *context) = 0;
    virtual void visitCompositeTypeDefinition(vhdlParser::Composite_type_definitionContext *context) = 0;
    virtual void visitConcurrentAssertionStatement(vhdlParser::Concurrent_assertion_statementContext *context) = 0;
    virtual void visitConcurrentBreakStatement(vhdlParser::Concurrent_break_statementContext *context) = 0;
    virtual void visitConcurrentProcedureCallStatement(vhdlParser::Concurrent_procedure_call_statementContext *context) = 0;
    virtual void visitConcurrentSignalAssignmentStatement(vhdlParser::Concurrent_signal_assignment_statementContext *context) = 0;
    virtual void visitCondition(vhdlParser::ConditionContext *context) = 0;
    virtual void visitConditionClause(vhdlParser::Condition_clauseContext *context) = 0;
    virtual void visitConditionalSignalAssignment(vhdlParser::Conditional_signal_assignmentContext *context) = 0;
    virtual void visitConditionalWaveforms(vhdlParser::Conditional_waveformsContext *context) = 0;
    virtual void visitConfigurationDeclaration(vhdlParser::Configuration_declarationContext *context) = 0;
    virtual void visitConfigurationDeclarativeItem(vhdlParser::Configuration_declarative_itemContext *context) = 0;
    virtual void visitConfigurationDeclarativePart(vhdlParser::Configuration_declarative_partContext *context) = 0;
    virtual void visitConfigurationItem(vhdlParser::Configuration_itemContext *context) = 0;
    virtual void visitConfigurationSpecification(vhdlParser::Configuration_specificationContext *context) = 0;
    virtual void visitConstantDeclaration(vhdlParser::Constant_declarationContext *context) = 0;
    virtual void visitConstrainedArrayDefinition(vhdlParser::Constrained_array_definitionContext *context) = 0;
    virtual void visitConstrainedNatureDefinition(vhdlParser::Constrained_nature_definitionContext *context) = 0;
    virtual void visitConstraint(vhdlParser::ConstraintContext *context) = 0;
    virtual void visitContextClause(vhdlParser::Context_clauseContext *context) = 0;
    virtual void visitContextItem(vhdlParser::Context_itemContext *context) = 0;
    virtual void visitDelayMechanism(vhdlParser::Delay_mechanismContext *context) = 0;
    virtual void visitDesignFile(vhdlParser::Design_fileContext *context) = 0;
    virtual void visitDesignUnit(vhdlParser::Design_unitContext *context) = 0;
    virtual void visitDesignator(vhdlParser::DesignatorContext *context) = 0;
    virtual void visitDirection(vhdlParser::DirectionContext *context) = 0;
    virtual void visitDisconnectionSpecification(vhdlParser::Disconnection_specificationContext *context) = 0;
    virtual void visitDiscreteRange(vhdlParser::Discrete_rangeContext *context) = 0;
    virtual void visitElementAssociation(vhdlParser::Element_associationContext *context) = 0;
    virtual void visitElementDeclaration(vhdlParser::Element_declarationContext *context) = 0;
    virtual void visitElementSubnatureDefinition(vhdlParser::Element_subnature_definitionContext *context) = 0;
    virtual void visitElementSubtypeDefinition(vhdlParser::Element_subtype_definitionContext *context) = 0;
    virtual void visitEntityAspect(vhdlParser::Entity_aspectContext *context) = 0;
    virtual void visitEntityClass(vhdlParser::Entity_classContext *context) = 0;
    virtual void visitEntityClassEntry(vhdlParser::Entity_class_entryContext *context) = 0;
    virtual void visitEntityClassEntryList(vhdlParser::Entity_class_entry_listContext *context) = 0;
    virtual void visitEntityDeclaration(vhdlParser::Entity_declarationContext *context) = 0;
    virtual void visitEntityDeclarativeItem(vhdlParser::Entity_declarative_itemContext *context) = 0;
    virtual void visitEntityDeclarativePart(vhdlParser::Entity_declarative_partContext *context) = 0;
    virtual void visitEntityDesignator(vhdlParser::Entity_designatorContext *context) = 0;
    virtual void visitEntityHeader(vhdlParser::Entity_headerContext *context) = 0;
    virtual void visitEntityNameList(vhdlParser::Entity_name_listContext *context) = 0;
    virtual void visitEntitySpecification(vhdlParser::Entity_specificationContext *context) = 0;
    virtual void visitEntityStatement(vhdlParser::Entity_statementContext *context) = 0;
    virtual void visitEntityStatementPart(vhdlParser::Entity_statement_partContext *context) = 0;
    virtual void visitEntityTag(vhdlParser::Entity_tagContext *context) = 0;
    virtual void visitEnumerationLiteral(vhdlParser::Enumeration_literalContext *context) = 0;
    virtual void visitEnumerationTypeDefinition(vhdlParser::Enumeration_type_definitionContext *context) = 0;
    virtual void visitExitStatement(vhdlParser::Exit_statementContext *context) = 0;
    virtual void visitExpression(vhdlParser::ExpressionContext *context) = 0;
    virtual void visitFactor(vhdlParser::FactorContext *context) = 0;
    virtual void visitFileDeclaration(vhdlParser::File_declarationContext *context) = 0;
    virtual void visitFileLogicalName(vhdlParser::File_logical_nameContext *context) = 0;
    virtual void visitFileOpenInformation(vhdlParser::File_open_informationContext *context) = 0;
    virtual void visitFileTypeDefinition(vhdlParser::File_type_definitionContext *context) = 0;
    virtual void visitFormalParameterList(vhdlParser::Formal_parameter_listContext *context) = 0;
    virtual void visitFormalPart(vhdlParser::Formal_partContext *context) = 0;
    virtual void visitFreeQuantityDeclaration(vhdlParser::Free_quantity_declarationContext *context) = 0;
    virtual void visitGenerateStatement(vhdlParser::Generate_statementContext *context) = 0;
    virtual void visitGenerationScheme(vhdlParser::Generation_schemeContext *context) = 0;
    virtual void visitGenericClause(vhdlParser::Generic_clauseContext *context) = 0;
    virtual void visitGenericList(vhdlParser::Generic_listContext *context) = 0;
    virtual void visitGenericMapAspect(vhdlParser::Generic_map_aspectContext *context) = 0;
    virtual void visitGroupConstituent(vhdlParser::Group_constituentContext *context) = 0;
    virtual void visitGroupConstituentList(vhdlParser::Group_constituent_listContext *context) = 0;
    virtual void visitGroupDeclaration(vhdlParser::Group_declarationContext *context) = 0;
    virtual void visitGroupTemplateDeclaration(vhdlParser::Group_template_declarationContext *context) = 0;
    virtual void visitGuardedSignalSpecification(vhdlParser::Guarded_signal_specificationContext *context) = 0;
    virtual void visitIdentifier(vhdlParser::IdentifierContext *context) = 0;
    virtual void visitIdentifierList(vhdlParser::Identifier_listContext *context) = 0;
    virtual void visitIfStatement(vhdlParser::If_statementContext *context) = 0;
    virtual void visitIndexConstraint(vhdlParser::Index_constraintContext *context) = 0;
    virtual void visitIndexSpecification(vhdlParser::Index_specificationContext *context) = 0;
    virtual void visitIndexSubtypeDefinition(vhdlParser::Index_subtype_definitionContext *context) = 0;
    virtual void visitInstantiatedUnit(vhdlParser::Instantiated_unitContext *context) = 0;
    virtual void visitInstantiationList(vhdlParser::Instantiation_listContext *context) = 0;
    virtual void visitInterfaceConstantDeclaration(vhdlParser::Interface_constant_declarationContext *context) = 0;
    virtual void visitInterfaceDeclaration(vhdlParser::Interface_declarationContext *context) = 0;
    virtual void visitInterfaceElement(vhdlParser::Interface_elementContext *context) = 0;
    virtual void visitInterfaceFileDeclaration(vhdlParser::Interface_file_declarationContext *context) = 0;
    virtual void visitInterfaceSignalList(vhdlParser::Interface_signal_listContext *context) = 0;
    virtual void visitInterfacePortList(vhdlParser::Interface_port_listContext *context) = 0;
    virtual void visitInterfaceList(vhdlParser::Interface_listContext *context) = 0;
    virtual void visitInterfaceQuantityDeclaration(vhdlParser::Interface_quantity_declarationContext *context) = 0;
    virtual void visitInterfacePortDeclaration(vhdlParser::Interface_port_declarationContext *context) = 0;
    virtual void visitInterfaceSignalDeclaration(vhdlParser::Interface_signal_declarationContext *context) = 0;
    virtual void visitInterfaceTerminalDeclaration(vhdlParser::Interface_terminal_declarationContext *context) = 0;
    virtual void visitInterfaceVariableDeclaration(vhdlParser::Interface_variable_declarationContext *context) = 0;
    virtual void visitIterationScheme(vhdlParser::Iteration_schemeContext *context) = 0;
    virtual void visitLabelColon(vhdlParser::Label_colonContext *context) = 0;
    virtual void visitLibraryClause(vhdlParser::Library_clauseContext *context) = 0;
    virtual void visitLibraryUnit(vhdlParser::Library_unitContext *context) = 0;
    virtual void visitLiteral(vhdlParser::LiteralContext *context) = 0;
    virtual void visitLogicalName(vhdlParser::Logical_nameContext *context) = 0;
    virtual void visitLogicalNameList(vhdlParser::Logical_name_listContext *context) = 0;
    virtual void visitLogicalOperator(vhdlParser::Logical_operatorContext *context) = 0;
    virtual void visitLoopStatement(vhdlParser::Loop_statementContext *context) = 0;
    virtual void visitSignalMode(vhdlParser::Signal_modeContext *context) = 0;
    virtual void visitMultiplyingOperator(vhdlParser::Multiplying_operatorContext *context) = 0;
    virtual void visitName(vhdlParser::NameContext *context) = 0;
    virtual void visitNamePart(vhdlParser::Name_partContext *context) = 0;
    virtual void visitSelectedName(vhdlParser::Selected_nameContext *context) = 0;
    virtual void visitSelectedNamePart(vhdlParser::Selected_name_partContext *context) = 0;
    virtual void visitFunctionCallOrIndexedNamePart(vhdlParser::Function_call_or_indexed_name_partContext *context) = 0;
    virtual void visitSliceNamePart(vhdlParser::Slice_name_partContext *context) = 0;
    virtual void visitAttributeNamePart(vhdlParser::Attribute_name_partContext *context) = 0;
    virtual void visitNatureDeclaration(vhdlParser::Nature_declarationContext *context) = 0;
    virtual void visitNatureDefinition(vhdlParser::Nature_definitionContext *context) = 0;
    virtual void visitNatureElementDeclaration(vhdlParser::Nature_element_declarationContext *context) = 0;
    virtual void visitNextStatement(vhdlParser::Next_statementContext *context) = 0;
    virtual void visitNumericLiteral(vhdlParser::Numeric_literalContext *context) = 0;
    virtual void visitObjectDeclaration(vhdlParser::Object_declarationContext *context) = 0;
    virtual void visitOpts(vhdlParser::OptsContext *context) = 0;
    virtual void visitPackageBody(vhdlParser::Package_bodyContext *context) = 0;
    virtual void visitPackageBodyDeclarativeItem(vhdlParser::Package_body_declarative_itemContext *context) = 0;
    virtual void visitPackageBodyDeclarativePart(vhdlParser::Package_body_declarative_partContext *context) = 0;
    virtual void visitPackageDeclaration(vhdlParser::Package_declarationContext *context) = 0;
    virtual void visitPackageDeclarativeItem(vhdlParser::Package_declarative_itemContext *context) = 0;
    virtual void visitPackageDeclarativePart(vhdlParser::Package_declarative_partContext *context) = 0;
    virtual void visitParameterSpecification(vhdlParser::Parameter_specificationContext *context) = 0;
    virtual void visitPhysicalLiteral(vhdlParser::Physical_literalContext *context) = 0;
    virtual void visitPhysicalTypeDefinition(vhdlParser::Physical_type_definitionContext *context) = 0;
    virtual void visitPortClause(vhdlParser::Port_clauseContext *context) = 0;
    virtual void visitPortList(vhdlParser::Port_listContext *context) = 0;
    virtual void visitPortMapAspect(vhdlParser::Port_map_aspectContext *context) = 0;
    virtual void visitPrimary(vhdlParser::PrimaryContext *context) = 0;
    virtual void visitPrimaryUnit(vhdlParser::Primary_unitContext *context) = 0;
    virtual void visitProceduralDeclarativeItem(vhdlParser::Procedural_declarative_itemContext *context) = 0;
    virtual void visitProceduralDeclarativePart(vhdlParser::Procedural_declarative_partContext *context) = 0;
    virtual void visitProceduralStatementPart(vhdlParser::Procedural_statement_partContext *context) = 0;
    virtual void visitProcedureCall(vhdlParser::Procedure_callContext *context) = 0;
    virtual void visitProcedureCallStatement(vhdlParser::Procedure_call_statementContext *context) = 0;
    virtual void visitProcessDeclarativeItem(vhdlParser::Process_declarative_itemContext *context) = 0;
    virtual void visitProcessDeclarativePart(vhdlParser::Process_declarative_partContext *context) = 0;
    virtual void visitProcessStatement(vhdlParser::Process_statementContext *context) = 0;
    virtual void visitProcessStatementPart(vhdlParser::Process_statement_partContext *context) = 0;
    virtual void visitQualifiedExpression(vhdlParser::Qualified_expressionContext *context) = 0;
    virtual void visitQuantityDeclaration(vhdlParser::Quantity_declarationContext *context) = 0;
    virtual void visitQuantityList(vhdlParser::Quantity_listContext *context) = 0;
    virtual void visitQuantitySpecification(vhdlParser::Quantity_specificationContext *context) = 0;
    virtual void visitRangeDecl(vhdlParser::Range_declContext *context) = 0;
    virtual void visitExplicitRange(vhdlParser::Explicit_rangeContext *context) = 0;
    virtual void visitRangeConstraint(vhdlParser::Range_constraintContext *context) = 0;
    virtual void visitRecordNatureDefinition(vhdlParser::Record_nature_definitionContext *context) = 0;
    virtual void visitRecordTypeDefinition(vhdlParser::Record_type_definitionContext *context) = 0;
    virtual void visitRelation(vhdlParser::RelationContext *context) = 0;
    virtual void visitRelationalOperator(vhdlParser::Relational_operatorContext *context) = 0;
    virtual void visitReportStatement(vhdlParser::Report_statementContext *context) = 0;
    virtual void visitReturnStatement(vhdlParser::Return_statementContext *context) = 0;
    virtual void visitScalarNatureDefinition(vhdlParser::Scalar_nature_definitionContext *context) = 0;
    virtual void visitScalarTypeDefinition(vhdlParser::Scalar_type_definitionContext *context) = 0;
    virtual void visitSecondaryUnit(vhdlParser::Secondary_unitContext *context) = 0;
    virtual void visitSecondaryUnitDeclaration(vhdlParser::Secondary_unit_declarationContext *context) = 0;
    virtual void visitSelectedSignalAssignment(vhdlParser::Selected_signal_assignmentContext *context) = 0;
    virtual void visitSelectedWaveforms(vhdlParser::Selected_waveformsContext *context) = 0;
    virtual void visitSensitivityClause(vhdlParser::Sensitivity_clauseContext *context) = 0;
    virtual void visitSensitivityList(vhdlParser::Sensitivity_listContext *context) = 0;
    virtual void visitSequenceOfStatements(vhdlParser::Sequence_of_statementsContext *context) = 0;
    virtual void visitSequentialStatement(vhdlParser::Sequential_statementContext *context) = 0;
    virtual void visitShiftExpression(vhdlParser::Shift_expressionContext *context) = 0;
    virtual void visitShiftOperator(vhdlParser::Shift_operatorContext *context) = 0;
    virtual void visitSignalAssignmentStatement(vhdlParser::Signal_assignment_statementContext *context) = 0;
    virtual void visitSignalDeclaration(vhdlParser::Signal_declarationContext *context) = 0;
    virtual void visitSignalKind(vhdlParser::Signal_kindContext *context) = 0;
    virtual void visitSignalList(vhdlParser::Signal_listContext *context) = 0;
    virtual void visitSignature(vhdlParser::SignatureContext *context) = 0;
    virtual void visitSimpleExpression(vhdlParser::Simple_expressionContext *context) = 0;
    virtual void visitSimpleSimultaneousStatement(vhdlParser::Simple_simultaneous_statementContext *context) = 0;
    virtual void visitSimultaneousAlternative(vhdlParser::Simultaneous_alternativeContext *context) = 0;
    virtual void visitSimultaneousCaseStatement(vhdlParser::Simultaneous_case_statementContext *context) = 0;
    virtual void visitSimultaneousIfStatement(vhdlParser::Simultaneous_if_statementContext *context) = 0;
    virtual void visitSimultaneousProceduralStatement(vhdlParser::Simultaneous_procedural_statementContext *context) = 0;
    virtual void visitSimultaneousStatement(vhdlParser::Simultaneous_statementContext *context) = 0;
    virtual void visitSimultaneousStatementPart(vhdlParser::Simultaneous_statement_partContext *context) = 0;
    virtual void visitSourceAspect(vhdlParser::Source_aspectContext *context) = 0;
    virtual void visitSourceQuantityDeclaration(vhdlParser::Source_quantity_declarationContext *context) = 0;
    virtual void visitStepLimitSpecification(vhdlParser::Step_limit_specificationContext *context) = 0;
    virtual void visitSubnatureDeclaration(vhdlParser::Subnature_declarationContext *context) = 0;
    virtual void visitSubnatureIndication(vhdlParser::Subnature_indicationContext *context) = 0;
    virtual void visitSubprogramBody(vhdlParser::Subprogram_bodyContext *context) = 0;
    virtual void visitSubprogramDeclaration(vhdlParser::Subprogram_declarationContext *context) = 0;
    virtual void visitSubprogramDeclarativeItem(vhdlParser::Subprogram_declarative_itemContext *context) = 0;
    virtual void visitSubprogramDeclarativePart(vhdlParser::Subprogram_declarative_partContext *context) = 0;
    virtual void visitSubprogramKind(vhdlParser::Subprogram_kindContext *context) = 0;
    virtual void visitSubprogramSpecification(vhdlParser::Subprogram_specificationContext *context) = 0;
    virtual void visitProcedureSpecification(vhdlParser::Procedure_specificationContext *context) = 0;
    virtual void visitFunctionSpecification(vhdlParser::Function_specificationContext *context) = 0;
    virtual void visitSubprogramStatementPart(vhdlParser::Subprogram_statement_partContext *context) = 0;
    virtual void visitSubtypeDeclaration(vhdlParser::Subtype_declarationContext *context) = 0;
    virtual void visitSubtypeIndication(vhdlParser::Subtype_indicationContext *context) = 0;
    virtual void visitSuffix(vhdlParser::SuffixContext *context) = 0;
    virtual void visitTarget(vhdlParser::TargetContext *context) = 0;
    virtual void visitTerm(vhdlParser::TermContext *context) = 0;
    virtual void visitTerminalAspect(vhdlParser::Terminal_aspectContext *context) = 0;
    virtual void visitTerminalDeclaration(vhdlParser::Terminal_declarationContext *context) = 0;
    virtual void visitThroughAspect(vhdlParser::Through_aspectContext *context) = 0;
    virtual void visitTimeoutClause(vhdlParser::Timeout_clauseContext *context) = 0;
    virtual void visitToleranceAspect(vhdlParser::Tolerance_aspectContext *context) = 0;
    virtual void visitTypeDeclaration(vhdlParser::Type_declarationContext *context) = 0;
    virtual void visitTypeDefinition(vhdlParser::Type_definitionContext *context) = 0;
    virtual void visitUnconstrainedArrayDefinition(vhdlParser::Unconstrained_array_definitionContext *context) = 0;
    virtual void visitUnconstrainedNatureDefinition(vhdlParser::Unconstrained_nature_definitionContext *context) = 0;
    virtual void visitUseClause(vhdlParser::Use_clauseContext *context) = 0;
    virtual void visitVariableAssignmentStatement(vhdlParser::Variable_assignment_statementContext *context) = 0;
    virtual void visitVariableDeclaration(vhdlParser::Variable_declarationContext *context) = 0;
    virtual void visitWaitStatement(vhdlParser::Wait_statementContext *context) = 0;
    virtual void visitWaveform(vhdlParser::WaveformContext *context) = 0;
    virtual void visitWaveformElement(vhdlParser::Waveform_elementContext *context) = 0;
};
} // namespace builder::adapter

#endif /* BUILDER_ADAPTER_VOID_VISITOR_HPP */
