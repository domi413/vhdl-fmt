// Generated by gen_adapter.py on 2025-10-05T20:35:38Z
// Source: /home/dyb/Projects/vhdl-antlr4/build/generated/vhdlVisitor.h
// NOTE: Do not edit by hand â€“ regenerate after grammar changes.

#pragma once

#if defined(__clang__)
#  pragma clang diagnostic push
#  pragma clang diagnostic ignored "-Wunused-parameter"
#elif defined(__GNUC__)
#  pragma GCC diagnostic push
#  pragma GCC diagnostic ignored "-Wunused-parameter"
#endif

#include "vhdlParser.h"

namespace builder::adapter {
class VoidVisitor {
public:
    virtual ~VoidVisitor() = default;

    virtual void visitAbstract_literal(vhdlParser::Abstract_literalContext *context) {}
    virtual void visitAccess_type_definition(vhdlParser::Access_type_definitionContext *context) {}
    virtual void visitAcross_aspect(vhdlParser::Across_aspectContext *context) {}
    virtual void visitActual_designator(vhdlParser::Actual_designatorContext *context) {}
    virtual void visitActual_parameter_part(vhdlParser::Actual_parameter_partContext *context) {}
    virtual void visitActual_part(vhdlParser::Actual_partContext *context) {}
    virtual void visitAdding_operator(vhdlParser::Adding_operatorContext *context) {}
    virtual void visitAggregate(vhdlParser::AggregateContext *context) {}
    virtual void visitAlias_declaration(vhdlParser::Alias_declarationContext *context) {}
    virtual void visitAlias_designator(vhdlParser::Alias_designatorContext *context) {}
    virtual void visitAlias_indication(vhdlParser::Alias_indicationContext *context) {}
    virtual void visitAllocator(vhdlParser::AllocatorContext *context) {}
    virtual void visitArchitecture_body(vhdlParser::Architecture_bodyContext *context) {}
    virtual void visitArchitecture_declarative_part(vhdlParser::Architecture_declarative_partContext *context) {}
    virtual void visitArchitecture_statement(vhdlParser::Architecture_statementContext *context) {}
    virtual void visitArchitecture_statement_part(vhdlParser::Architecture_statement_partContext *context) {}
    virtual void visitArray_nature_definition(vhdlParser::Array_nature_definitionContext *context) {}
    virtual void visitArray_type_definition(vhdlParser::Array_type_definitionContext *context) {}
    virtual void visitAssertion(vhdlParser::AssertionContext *context) {}
    virtual void visitAssertion_statement(vhdlParser::Assertion_statementContext *context) {}
    virtual void visitAssociation_element(vhdlParser::Association_elementContext *context) {}
    virtual void visitAssociation_list(vhdlParser::Association_listContext *context) {}
    virtual void visitAttribute_declaration(vhdlParser::Attribute_declarationContext *context) {}
    virtual void visitAttribute_designator(vhdlParser::Attribute_designatorContext *context) {}
    virtual void visitAttribute_specification(vhdlParser::Attribute_specificationContext *context) {}
    virtual void visitBase_unit_declaration(vhdlParser::Base_unit_declarationContext *context) {}
    virtual void visitBinding_indication(vhdlParser::Binding_indicationContext *context) {}
    virtual void visitBlock_configuration(vhdlParser::Block_configurationContext *context) {}
    virtual void visitBlock_declarative_item(vhdlParser::Block_declarative_itemContext *context) {}
    virtual void visitBlock_declarative_part(vhdlParser::Block_declarative_partContext *context) {}
    virtual void visitBlock_header(vhdlParser::Block_headerContext *context) {}
    virtual void visitBlock_specification(vhdlParser::Block_specificationContext *context) {}
    virtual void visitBlock_statement(vhdlParser::Block_statementContext *context) {}
    virtual void visitBlock_statement_part(vhdlParser::Block_statement_partContext *context) {}
    virtual void visitBranch_quantity_declaration(vhdlParser::Branch_quantity_declarationContext *context) {}
    virtual void visitBreak_element(vhdlParser::Break_elementContext *context) {}
    virtual void visitBreak_list(vhdlParser::Break_listContext *context) {}
    virtual void visitBreak_selector_clause(vhdlParser::Break_selector_clauseContext *context) {}
    virtual void visitBreak_statement(vhdlParser::Break_statementContext *context) {}
    virtual void visitCase_statement(vhdlParser::Case_statementContext *context) {}
    virtual void visitCase_statement_alternative(vhdlParser::Case_statement_alternativeContext *context) {}
    virtual void visitChoice(vhdlParser::ChoiceContext *context) {}
    virtual void visitChoices(vhdlParser::ChoicesContext *context) {}
    virtual void visitComponent_configuration(vhdlParser::Component_configurationContext *context) {}
    virtual void visitComponent_declaration(vhdlParser::Component_declarationContext *context) {}
    virtual void visitComponent_instantiation_statement(vhdlParser::Component_instantiation_statementContext *context) {}
    virtual void visitComponent_specification(vhdlParser::Component_specificationContext *context) {}
    virtual void visitComposite_nature_definition(vhdlParser::Composite_nature_definitionContext *context) {}
    virtual void visitComposite_type_definition(vhdlParser::Composite_type_definitionContext *context) {}
    virtual void visitConcurrent_assertion_statement(vhdlParser::Concurrent_assertion_statementContext *context) {}
    virtual void visitConcurrent_break_statement(vhdlParser::Concurrent_break_statementContext *context) {}
    virtual void visitConcurrent_procedure_call_statement(vhdlParser::Concurrent_procedure_call_statementContext *context) {}
    virtual void visitConcurrent_signal_assignment_statement(vhdlParser::Concurrent_signal_assignment_statementContext *context) {}
    virtual void visitCondition(vhdlParser::ConditionContext *context) {}
    virtual void visitCondition_clause(vhdlParser::Condition_clauseContext *context) {}
    virtual void visitConditional_signal_assignment(vhdlParser::Conditional_signal_assignmentContext *context) {}
    virtual void visitConditional_waveforms(vhdlParser::Conditional_waveformsContext *context) {}
    virtual void visitConfiguration_declaration(vhdlParser::Configuration_declarationContext *context) {}
    virtual void visitConfiguration_declarative_item(vhdlParser::Configuration_declarative_itemContext *context) {}
    virtual void visitConfiguration_declarative_part(vhdlParser::Configuration_declarative_partContext *context) {}
    virtual void visitConfiguration_item(vhdlParser::Configuration_itemContext *context) {}
    virtual void visitConfiguration_specification(vhdlParser::Configuration_specificationContext *context) {}
    virtual void visitConstant_declaration(vhdlParser::Constant_declarationContext *context) {}
    virtual void visitConstrained_array_definition(vhdlParser::Constrained_array_definitionContext *context) {}
    virtual void visitConstrained_nature_definition(vhdlParser::Constrained_nature_definitionContext *context) {}
    virtual void visitConstraint(vhdlParser::ConstraintContext *context) {}
    virtual void visitContext_clause(vhdlParser::Context_clauseContext *context) {}
    virtual void visitContext_item(vhdlParser::Context_itemContext *context) {}
    virtual void visitDelay_mechanism(vhdlParser::Delay_mechanismContext *context) {}
    virtual void visitDesign_file(vhdlParser::Design_fileContext *context) {}
    virtual void visitDesign_unit(vhdlParser::Design_unitContext *context) {}
    virtual void visitDesignator(vhdlParser::DesignatorContext *context) {}
    virtual void visitDirection(vhdlParser::DirectionContext *context) {}
    virtual void visitDisconnection_specification(vhdlParser::Disconnection_specificationContext *context) {}
    virtual void visitDiscrete_range(vhdlParser::Discrete_rangeContext *context) {}
    virtual void visitElement_association(vhdlParser::Element_associationContext *context) {}
    virtual void visitElement_declaration(vhdlParser::Element_declarationContext *context) {}
    virtual void visitElement_subnature_definition(vhdlParser::Element_subnature_definitionContext *context) {}
    virtual void visitElement_subtype_definition(vhdlParser::Element_subtype_definitionContext *context) {}
    virtual void visitEntity_aspect(vhdlParser::Entity_aspectContext *context) {}
    virtual void visitEntity_class(vhdlParser::Entity_classContext *context) {}
    virtual void visitEntity_class_entry(vhdlParser::Entity_class_entryContext *context) {}
    virtual void visitEntity_class_entry_list(vhdlParser::Entity_class_entry_listContext *context) {}
    virtual void visitEntity_declaration(vhdlParser::Entity_declarationContext *context) {}
    virtual void visitEntity_declarative_item(vhdlParser::Entity_declarative_itemContext *context) {}
    virtual void visitEntity_declarative_part(vhdlParser::Entity_declarative_partContext *context) {}
    virtual void visitEntity_designator(vhdlParser::Entity_designatorContext *context) {}
    virtual void visitEntity_header(vhdlParser::Entity_headerContext *context) {}
    virtual void visitEntity_name_list(vhdlParser::Entity_name_listContext *context) {}
    virtual void visitEntity_specification(vhdlParser::Entity_specificationContext *context) {}
    virtual void visitEntity_statement(vhdlParser::Entity_statementContext *context) {}
    virtual void visitEntity_statement_part(vhdlParser::Entity_statement_partContext *context) {}
    virtual void visitEntity_tag(vhdlParser::Entity_tagContext *context) {}
    virtual void visitEnumeration_literal(vhdlParser::Enumeration_literalContext *context) {}
    virtual void visitEnumeration_type_definition(vhdlParser::Enumeration_type_definitionContext *context) {}
    virtual void visitExit_statement(vhdlParser::Exit_statementContext *context) {}
    virtual void visitExpression(vhdlParser::ExpressionContext *context) {}
    virtual void visitFactor(vhdlParser::FactorContext *context) {}
    virtual void visitFile_declaration(vhdlParser::File_declarationContext *context) {}
    virtual void visitFile_logical_name(vhdlParser::File_logical_nameContext *context) {}
    virtual void visitFile_open_information(vhdlParser::File_open_informationContext *context) {}
    virtual void visitFile_type_definition(vhdlParser::File_type_definitionContext *context) {}
    virtual void visitFormal_parameter_list(vhdlParser::Formal_parameter_listContext *context) {}
    virtual void visitFormal_part(vhdlParser::Formal_partContext *context) {}
    virtual void visitFree_quantity_declaration(vhdlParser::Free_quantity_declarationContext *context) {}
    virtual void visitGenerate_statement(vhdlParser::Generate_statementContext *context) {}
    virtual void visitGeneration_scheme(vhdlParser::Generation_schemeContext *context) {}
    virtual void visitGeneric_clause(vhdlParser::Generic_clauseContext *context) {}
    virtual void visitGeneric_list(vhdlParser::Generic_listContext *context) {}
    virtual void visitGeneric_map_aspect(vhdlParser::Generic_map_aspectContext *context) {}
    virtual void visitGroup_constituent(vhdlParser::Group_constituentContext *context) {}
    virtual void visitGroup_constituent_list(vhdlParser::Group_constituent_listContext *context) {}
    virtual void visitGroup_declaration(vhdlParser::Group_declarationContext *context) {}
    virtual void visitGroup_template_declaration(vhdlParser::Group_template_declarationContext *context) {}
    virtual void visitGuarded_signal_specification(vhdlParser::Guarded_signal_specificationContext *context) {}
    virtual void visitIdentifier(vhdlParser::IdentifierContext *context) {}
    virtual void visitIdentifier_list(vhdlParser::Identifier_listContext *context) {}
    virtual void visitIf_statement(vhdlParser::If_statementContext *context) {}
    virtual void visitIndex_constraint(vhdlParser::Index_constraintContext *context) {}
    virtual void visitIndex_specification(vhdlParser::Index_specificationContext *context) {}
    virtual void visitIndex_subtype_definition(vhdlParser::Index_subtype_definitionContext *context) {}
    virtual void visitInstantiated_unit(vhdlParser::Instantiated_unitContext *context) {}
    virtual void visitInstantiation_list(vhdlParser::Instantiation_listContext *context) {}
    virtual void visitInterface_constant_declaration(vhdlParser::Interface_constant_declarationContext *context) {}
    virtual void visitInterface_declaration(vhdlParser::Interface_declarationContext *context) {}
    virtual void visitInterface_element(vhdlParser::Interface_elementContext *context) {}
    virtual void visitInterface_file_declaration(vhdlParser::Interface_file_declarationContext *context) {}
    virtual void visitInterface_signal_list(vhdlParser::Interface_signal_listContext *context) {}
    virtual void visitInterface_port_list(vhdlParser::Interface_port_listContext *context) {}
    virtual void visitInterface_list(vhdlParser::Interface_listContext *context) {}
    virtual void visitInterface_quantity_declaration(vhdlParser::Interface_quantity_declarationContext *context) {}
    virtual void visitInterface_port_declaration(vhdlParser::Interface_port_declarationContext *context) {}
    virtual void visitInterface_signal_declaration(vhdlParser::Interface_signal_declarationContext *context) {}
    virtual void visitInterface_terminal_declaration(vhdlParser::Interface_terminal_declarationContext *context) {}
    virtual void visitInterface_variable_declaration(vhdlParser::Interface_variable_declarationContext *context) {}
    virtual void visitIteration_scheme(vhdlParser::Iteration_schemeContext *context) {}
    virtual void visitLabel_colon(vhdlParser::Label_colonContext *context) {}
    virtual void visitLibrary_clause(vhdlParser::Library_clauseContext *context) {}
    virtual void visitLibrary_unit(vhdlParser::Library_unitContext *context) {}
    virtual void visitLiteral(vhdlParser::LiteralContext *context) {}
    virtual void visitLogical_name(vhdlParser::Logical_nameContext *context) {}
    virtual void visitLogical_name_list(vhdlParser::Logical_name_listContext *context) {}
    virtual void visitLogical_operator(vhdlParser::Logical_operatorContext *context) {}
    virtual void visitLoop_statement(vhdlParser::Loop_statementContext *context) {}
    virtual void visitSignal_mode(vhdlParser::Signal_modeContext *context) {}
    virtual void visitMultiplying_operator(vhdlParser::Multiplying_operatorContext *context) {}
    virtual void visitName(vhdlParser::NameContext *context) {}
    virtual void visitName_part(vhdlParser::Name_partContext *context) {}
    virtual void visitSelected_name(vhdlParser::Selected_nameContext *context) {}
    virtual void visitSelected_name_part(vhdlParser::Selected_name_partContext *context) {}
    virtual void visitFunction_call_or_indexed_name_part(vhdlParser::Function_call_or_indexed_name_partContext *context) {}
    virtual void visitSlice_name_part(vhdlParser::Slice_name_partContext *context) {}
    virtual void visitAttribute_name_part(vhdlParser::Attribute_name_partContext *context) {}
    virtual void visitNature_declaration(vhdlParser::Nature_declarationContext *context) {}
    virtual void visitNature_definition(vhdlParser::Nature_definitionContext *context) {}
    virtual void visitNature_element_declaration(vhdlParser::Nature_element_declarationContext *context) {}
    virtual void visitNext_statement(vhdlParser::Next_statementContext *context) {}
    virtual void visitNumeric_literal(vhdlParser::Numeric_literalContext *context) {}
    virtual void visitObject_declaration(vhdlParser::Object_declarationContext *context) {}
    virtual void visitOpts(vhdlParser::OptsContext *context) {}
    virtual void visitPackage_body(vhdlParser::Package_bodyContext *context) {}
    virtual void visitPackage_body_declarative_item(vhdlParser::Package_body_declarative_itemContext *context) {}
    virtual void visitPackage_body_declarative_part(vhdlParser::Package_body_declarative_partContext *context) {}
    virtual void visitPackage_declaration(vhdlParser::Package_declarationContext *context) {}
    virtual void visitPackage_declarative_item(vhdlParser::Package_declarative_itemContext *context) {}
    virtual void visitPackage_declarative_part(vhdlParser::Package_declarative_partContext *context) {}
    virtual void visitParameter_specification(vhdlParser::Parameter_specificationContext *context) {}
    virtual void visitPhysical_literal(vhdlParser::Physical_literalContext *context) {}
    virtual void visitPhysical_type_definition(vhdlParser::Physical_type_definitionContext *context) {}
    virtual void visitPort_clause(vhdlParser::Port_clauseContext *context) {}
    virtual void visitPort_list(vhdlParser::Port_listContext *context) {}
    virtual void visitPort_map_aspect(vhdlParser::Port_map_aspectContext *context) {}
    virtual void visitPrimary(vhdlParser::PrimaryContext *context) {}
    virtual void visitPrimary_unit(vhdlParser::Primary_unitContext *context) {}
    virtual void visitProcedural_declarative_item(vhdlParser::Procedural_declarative_itemContext *context) {}
    virtual void visitProcedural_declarative_part(vhdlParser::Procedural_declarative_partContext *context) {}
    virtual void visitProcedural_statement_part(vhdlParser::Procedural_statement_partContext *context) {}
    virtual void visitProcedure_call(vhdlParser::Procedure_callContext *context) {}
    virtual void visitProcedure_call_statement(vhdlParser::Procedure_call_statementContext *context) {}
    virtual void visitProcess_declarative_item(vhdlParser::Process_declarative_itemContext *context) {}
    virtual void visitProcess_declarative_part(vhdlParser::Process_declarative_partContext *context) {}
    virtual void visitProcess_statement(vhdlParser::Process_statementContext *context) {}
    virtual void visitProcess_statement_part(vhdlParser::Process_statement_partContext *context) {}
    virtual void visitQualified_expression(vhdlParser::Qualified_expressionContext *context) {}
    virtual void visitQuantity_declaration(vhdlParser::Quantity_declarationContext *context) {}
    virtual void visitQuantity_list(vhdlParser::Quantity_listContext *context) {}
    virtual void visitQuantity_specification(vhdlParser::Quantity_specificationContext *context) {}
    virtual void visitRange_decl(vhdlParser::Range_declContext *context) {}
    virtual void visitExplicit_range(vhdlParser::Explicit_rangeContext *context) {}
    virtual void visitRange_constraint(vhdlParser::Range_constraintContext *context) {}
    virtual void visitRecord_nature_definition(vhdlParser::Record_nature_definitionContext *context) {}
    virtual void visitRecord_type_definition(vhdlParser::Record_type_definitionContext *context) {}
    virtual void visitRelation(vhdlParser::RelationContext *context) {}
    virtual void visitRelational_operator(vhdlParser::Relational_operatorContext *context) {}
    virtual void visitReport_statement(vhdlParser::Report_statementContext *context) {}
    virtual void visitReturn_statement(vhdlParser::Return_statementContext *context) {}
    virtual void visitScalar_nature_definition(vhdlParser::Scalar_nature_definitionContext *context) {}
    virtual void visitScalar_type_definition(vhdlParser::Scalar_type_definitionContext *context) {}
    virtual void visitSecondary_unit(vhdlParser::Secondary_unitContext *context) {}
    virtual void visitSecondary_unit_declaration(vhdlParser::Secondary_unit_declarationContext *context) {}
    virtual void visitSelected_signal_assignment(vhdlParser::Selected_signal_assignmentContext *context) {}
    virtual void visitSelected_waveforms(vhdlParser::Selected_waveformsContext *context) {}
    virtual void visitSensitivity_clause(vhdlParser::Sensitivity_clauseContext *context) {}
    virtual void visitSensitivity_list(vhdlParser::Sensitivity_listContext *context) {}
    virtual void visitSequence_of_statements(vhdlParser::Sequence_of_statementsContext *context) {}
    virtual void visitSequential_statement(vhdlParser::Sequential_statementContext *context) {}
    virtual void visitShift_expression(vhdlParser::Shift_expressionContext *context) {}
    virtual void visitShift_operator(vhdlParser::Shift_operatorContext *context) {}
    virtual void visitSignal_assignment_statement(vhdlParser::Signal_assignment_statementContext *context) {}
    virtual void visitSignal_declaration(vhdlParser::Signal_declarationContext *context) {}
    virtual void visitSignal_kind(vhdlParser::Signal_kindContext *context) {}
    virtual void visitSignal_list(vhdlParser::Signal_listContext *context) {}
    virtual void visitSignature(vhdlParser::SignatureContext *context) {}
    virtual void visitSimple_expression(vhdlParser::Simple_expressionContext *context) {}
    virtual void visitSimple_simultaneous_statement(vhdlParser::Simple_simultaneous_statementContext *context) {}
    virtual void visitSimultaneous_alternative(vhdlParser::Simultaneous_alternativeContext *context) {}
    virtual void visitSimultaneous_case_statement(vhdlParser::Simultaneous_case_statementContext *context) {}
    virtual void visitSimultaneous_if_statement(vhdlParser::Simultaneous_if_statementContext *context) {}
    virtual void visitSimultaneous_procedural_statement(vhdlParser::Simultaneous_procedural_statementContext *context) {}
    virtual void visitSimultaneous_statement(vhdlParser::Simultaneous_statementContext *context) {}
    virtual void visitSimultaneous_statement_part(vhdlParser::Simultaneous_statement_partContext *context) {}
    virtual void visitSource_aspect(vhdlParser::Source_aspectContext *context) {}
    virtual void visitSource_quantity_declaration(vhdlParser::Source_quantity_declarationContext *context) {}
    virtual void visitStep_limit_specification(vhdlParser::Step_limit_specificationContext *context) {}
    virtual void visitSubnature_declaration(vhdlParser::Subnature_declarationContext *context) {}
    virtual void visitSubnature_indication(vhdlParser::Subnature_indicationContext *context) {}
    virtual void visitSubprogram_body(vhdlParser::Subprogram_bodyContext *context) {}
    virtual void visitSubprogram_declaration(vhdlParser::Subprogram_declarationContext *context) {}
    virtual void visitSubprogram_declarative_item(vhdlParser::Subprogram_declarative_itemContext *context) {}
    virtual void visitSubprogram_declarative_part(vhdlParser::Subprogram_declarative_partContext *context) {}
    virtual void visitSubprogram_kind(vhdlParser::Subprogram_kindContext *context) {}
    virtual void visitSubprogram_specification(vhdlParser::Subprogram_specificationContext *context) {}
    virtual void visitProcedure_specification(vhdlParser::Procedure_specificationContext *context) {}
    virtual void visitFunction_specification(vhdlParser::Function_specificationContext *context) {}
    virtual void visitSubprogram_statement_part(vhdlParser::Subprogram_statement_partContext *context) {}
    virtual void visitSubtype_declaration(vhdlParser::Subtype_declarationContext *context) {}
    virtual void visitSubtype_indication(vhdlParser::Subtype_indicationContext *context) {}
    virtual void visitSuffix(vhdlParser::SuffixContext *context) {}
    virtual void visitTarget(vhdlParser::TargetContext *context) {}
    virtual void visitTerm(vhdlParser::TermContext *context) {}
    virtual void visitTerminal_aspect(vhdlParser::Terminal_aspectContext *context) {}
    virtual void visitTerminal_declaration(vhdlParser::Terminal_declarationContext *context) {}
    virtual void visitThrough_aspect(vhdlParser::Through_aspectContext *context) {}
    virtual void visitTimeout_clause(vhdlParser::Timeout_clauseContext *context) {}
    virtual void visitTolerance_aspect(vhdlParser::Tolerance_aspectContext *context) {}
    virtual void visitType_declaration(vhdlParser::Type_declarationContext *context) {}
    virtual void visitType_definition(vhdlParser::Type_definitionContext *context) {}
    virtual void visitUnconstrained_array_definition(vhdlParser::Unconstrained_array_definitionContext *context) {}
    virtual void visitUnconstrained_nature_definition(vhdlParser::Unconstrained_nature_definitionContext *context) {}
    virtual void visitUse_clause(vhdlParser::Use_clauseContext *context) {}
    virtual void visitVariable_assignment_statement(vhdlParser::Variable_assignment_statementContext *context) {}
    virtual void visitVariable_declaration(vhdlParser::Variable_declarationContext *context) {}
    virtual void visitWait_statement(vhdlParser::Wait_statementContext *context) {}
    virtual void visitWaveform(vhdlParser::WaveformContext *context) {}
    virtual void visitWaveform_element(vhdlParser::Waveform_elementContext *context) {}
};
} // namespace builder::adapter

#if defined(__clang__)
#  pragma clang diagnostic pop
#elif defined(__GNUC__)
#  pragma GCC diagnostic pop
#endif