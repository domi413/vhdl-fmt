name: "Setup CI Environment"

inputs:
  install_conan:
    description: "Whether to install conan"
    required: false
    default: "false"
  install_gersemi:
    description: "Whether to install gersemi"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/pacman/pkg
          /home/aur/.cache/yay
          /home/aur/yay
        key: arch-deps-${{ runner.os }}-${{ hashFiles('.github/workflows/*.yml') }}-v1
        restore-keys: |
          arch-deps-${{ runner.os }}-v1
          arch-deps-${{ runner.os }}-

    - name: Cache Conan packages
      if: inputs.install_conan == 'true'
      uses: actions/cache@v4
      with:
        path: /github/home/.conan2
        key: conan-${{ runner.os }}-${{ hashFiles('conanfile.txt') }}-v1
        restore-keys: |
          conan-${{ runner.os }}-v1
          conan-${{ runner.os }}-

    - name: Cache uv packages
      uses: actions/cache@v4
      with:
        path: /github/home/.local/share/uv/
        key: uv-cache-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'requirements.txt') }}-v1
        restore-keys: |
          uv-cache-${{ runner.os }}-v1
          uv-cache-${{ runner.os }}-

    - name: Install dependencies
      shell: bash
      run: |
        pacman -Sy --needed --noconfirm \
            base-devel \
            clang \
            cmake \
            git \
            make \
            ninja \
            uv \

        # Create venv and install python packages
        uv venv
        source .venv/bin/activate

        if [ "${{ inputs.install_conan }}" = "true" ]; then
          uv pip install conan
        fi

        if [ "${{ inputs.install_gersemi }}" = "true" ]; then
          uv pip install gersemi==0.19.3 colorama
        fi
